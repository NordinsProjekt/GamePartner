@inject MtGCard_Service.MtGCommanderService _commanderService
@inject MtGCard_Service.MtGCardBufferService _buffer

@if (Show)
{
    <input type="text" @bind="SearchText" />
    <button @onclick="SearchForCard">Search for a card</button>
    <InfoCard @ref ="InfoCardRef" onSaveCard="AddCommanderCardToPlayer"
              card="_commanderService.GetClickedCard()"
              PlayerList="_commanderService.GetPlayerList()" />
    <CardPager Jump="5" onClickedCard="ShowCard" _rep="_buffer" SearchText="@SearchText" />
}

@code {
    public bool Show { get; set; } = true;
    public string? SearchText { get; set; }
    public InfoCard? InfoCardRef { get; set; }

    public async Task SearchForCard()
    {
        if (!string.IsNullOrEmpty(SearchText))
        {
            await _commanderService.SearchForCard(SearchText);
        }
    }

    public void ShowCard(string cardId)
    {
        _commanderService.SetClickedCard(cardId);
    } 

    public void AddCommanderCardToPlayer(int playerId)
    {
        if (InfoCardRef != null && InfoCardRef.card != null)
        {
            _commanderService.SetCommanderForPlayer(playerId, InfoCardRef.card.Id);
            Show = false;
        }
    }
}
