@layout MagicBasicLayout
@page "/MagicBasic/CardSearch"
@using MtGCard_Service.Interface;
@using Domain.MtGDomain.DTO;
@using MtGDomain.DTO;
    using MtGCard_Service.Interface;
@inject IMtGCardRepository Repo
@inject IJSRuntime JSRuntime

<h1>Card Search</h1>
<MagicCardSearch EventCallback="SearchResult" />
@if (Result is null)
{
    <p>@Message</p>
}
<ShowSearchResult ShowLegality="true"  OnShowCard="onClickedCard" CardList="Result" />

@code {
    [Parameter]
    public EventCallback<MtGCardRecordDTO> ClickedCard { get; set; }
    public List<MtGCardRecordDTO>? Result { get; set; }
    private string Message { get; set; }
    private void SearchResult(MtGSearchResultRecord result)
    {
        if (result.SearchResult.Count > 0)
        {
            Result = result.SearchResult;
            Message = $"Found {result.SearchResult.Count} cards";
        }

        else
        {
            Result = null;
            Message = "Didnt find any matches";
        }

        StateHasChanged();
    }

    private async Task onClickedCard(string cardId)
    {
        var card = Result.Where(x => x.Id.Equals(cardId)).FirstOrDefault();
        if (card is not null)
            await ClickedCard.InvokeAsync(card);
    }
}